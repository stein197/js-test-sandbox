export = ElementFacade;
declare class ElementFacade {
    constructor(element: any);
    private __element;
    get textContent(): string;
    get innerHTML(): string;
    find(selector: string): ElementFacade | null;
    abort(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    animationEnd(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    animationIteration(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    animationStart(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    blur(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    canPlay(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    canPlayThrough(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    change(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    click(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    compositionEnd(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    compositionStart(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    compositionUpdate(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    contextMenu(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    copy(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    cut(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    doubleClick(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    drag(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    dragEnd(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    dragEnter(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    dragExit(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    dragLeave(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    dragOver(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    dragStart(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    drop(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    durationChange(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    emptied(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    encrypted(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    ended(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    error(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    focus(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    input(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    invalid(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    keyDown(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    keyPress(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    keyUp(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    load(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    loadStart(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    loadedData(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    loadedMetadata(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    mouseDown(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    mouseEnter(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    mouseLeave(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    mouseMove(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    mouseOut(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    mouseOver(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    mouseUp(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    paste(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    pause(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    play(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    playing(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    progress(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    rateChange(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    scroll(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    seeked(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    seeking(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    select(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    stalled(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    submit(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    suspend(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    timeUpdate(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    touchCancel(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    touchEnd(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    touchMove(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    touchStart(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    transitionEnd(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    volumeChange(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    waiting(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    wheel(data?: ReactDOMTestUtils.SyntheticEventData): Promise<void>;
    private __dispatchEvent;
}
import ReactDOMTestUtils = require("react-dom/test-utils");
